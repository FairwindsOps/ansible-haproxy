#{{ ansible_managed }}

global
  # maximum number of simultaneous active connections from an upstream web server
  maxconn {{ haproxy_maxconn }}

  log {{ haproxy_syslog_host }} {{ haproxy_syslog_facility }} {{ haproxy_log_level }}

  # Distribute the health checks with a bit of randomness
  spread-checks 5

  {% if haproxy_debug %}
  # Turn on verbose logging
  debug
  {% endif %}

  {% if haproxy_ca_base is defined %}
  ca-base {{ haproxy_ca_base }}
  {% endif %}

  # enable stats socket, for enabling/disabling servers
  stats socket /var/run/haproxy.stat mode 600 level admin

  {% if haproxy_globals is defined %}
  {% for global in haproxy_globals %}
  {{ global }}
  {% endfor %}
  {% endif %}

defaults
  log global
  mode http

  option httplog
  option dontlognull
  option log-separate-errors

  option redispatch
  option httpclose
  option forwardfor
  option forceclose
  option httpclose

  retries {{ haproxy_retries }}
  timeout connect {{ haproxy_connect_timeout }}
  timeout client  {{ haproxy_client_timeout }}
  timeout server  {{ haproxy_server_timeout }}
  balance {{ haproxy_balance }}

  # Remvoe the server from the farm gracefully if the health check URI returns
  # a 404. This is useful for rolling restarts.
  option httpchk
  http-check disable-on-404

  # Enable the statistics page
  stats enable
  stats uri /haproxy?stats
  {% if haproxy_stats_auth is defined %}
  stats auth {{ haproxy_stats_auth }}
  {% endif %}

  {% if haproxy_error_files is defined %}
  {% for key, value in haproxy_error_files %}
  errorfile {{ key }} {{ value }}
  {% endfor %}
  {% endif %}

  {% if haproxy_defaults is defined %}
  {% for default in haproxy_defaults %}
  {{ default }}
  {% endfor %}
  {% endif %}

## Backend config

backend {{ item.name }}
{% if item.disabled is defined and item.disabled == true %}
    disabled
{% endif -%}
{% if item.description is defined %}
    description {{ item.description }}
{% endif -%}
{% if item.servers is defined %}
{% for server in item.servers %}
    server {{ server.name }} {{ server.ip }}{% if server.port is defined %}:{{server.port }}{% endif %} {% if server.maxconn is defined %}maxconn {{server.maxconn }} {% endif %}{% if server.params is defined %}{% for param in server.params %}{{ param }} {% endfor %}{% endif %}

{% endfor %}
{% endif %}
{% if item.balance is defined %}
    balance {{ item.balance }}
{% endif -%}
{% if item.mode is defined %}
    mode {{ item.mode }}
{% endif -%}
{% if item.log is defined %}
    log {{ item.log }}
{% endif -%}
{% if item.retries is defined %}
    retries {{ item.retries }}
{% endif -%}
{% if item.redirects is defined %}
    {% for redirect in item.redirects -%}
    redirect {{ redirect }}
    {% endfor %}
{% endif -%}
{% if item.contimeout is defined %}
    contimeout {{ item.contimeout }}
{% endif -%}
{% if item.http_send_name_header is defined %}
    http-send-name-header {{ item.http_send_name_header }}
{% endif -%}
{% if item.http_check_expect is defined %}
{% for check_expect in item.http_check_expect %}
    http-check expect {{ check_expect }}
{% endfor %}
{% endif -%}
{% if item.http_request is defined %}
    {% include "http_request.cfg" %}
{% endif -%}
{% if item.options is defined %}
{% for option in item.options %}
    option {{ option }}
{% endfor %}
{% endif -%}

## Frontend config

frontend {{ item.name }} {%if item.ip is defined %}{{ item.ip }}{% endif %}{%if item.port is defined %}:{{ item.port }}{% endif %}

{% if item.bind is defined -%}
{%- for bind in item.bind -%}
    bind {{ bind }}{% if item.ssl is defined %}{% if item.ssl.cert is defined %} ssl crt {{ item.ssl.cert }}{% if item.ssl.ciphers is defined %} ciphers {{ item.ssl.ciphers }}{% endif %}{% endif %}{% endif %}

{% endfor -%}
{% endif -%}

{% if item.mode is defined -%}
    mode {{ item.mode }}
{% endif -%}

{% if item.maxconn is defined -%}
    maxconn {{ item.maxconn }}
{% endif -%}

{%- if item.monitor is defined -%}
   {% if item.monitor.uri is defined -%}
        monitor-uri {{ item.monitor.uri }}
   {% endif %}
   {%- if item.monitor.fail is defined -%}
     {%- for condition in item.monitor.fail -%}
        monitor fail {{ condition }}
     {% endfor %}
   {% endif %}
{% endif -%}

{%- if item.acl is defined -%}
{%- for acl in item.acl -%}
     acl {{ acl.name }} {{ acl.condition }}
{% endfor %}
{% endif -%}

{%- if item.reqadd is defined -%}
   {%- for reqadd in item.reqadd -%}
     reqadd {{ reqadd }}
   {% endfor %}
{% endif -%}

{%- if item.rate_limit_sessions is defined -%}
    rate-limit sessions {{ item.rate_limit_sessions }}
{% endif %}

{%- if item.block is defined -%}
{%- for block in item.block -%}
    block {{ block }}
{% endfor -%}
{% endif -%}

{% if item.options is defined %}
{% for option in item.options %}
    option {{ option }}
{% endfor %}
{% endif -%}

{%- if item.redirects is defined -%}
{%- for redirect in item.redirects -%}
    redirect {{ redirect }}
{% endfor -%}
{% endif -%}

{%- if item.http_request is defined -%}
{%- for request in item.http_request -%}
    http-request {{ request.action }}{% if request.param is defined %} {{ request.param }}{% endif %}{% if request.condition is defined %} {{ request.condition }}{% endif %}

{% endfor -%}
{% endif -%}

{%- if item.tcp_request is defined -%}
{%- for request in item.tcp_request -%}
    tcp-request {{ request.param }} {{ request.value }}{% if request.condition is defined %} {{ request.condition }}{% endif %}
{% endfor -%}
{% endif -%}

{% if item.http_request is defined %}
    {% include "http_request.cfg" %}
{% endif -%}

{%- if item.default_backend is defined -%}
default_backend {{ item.default_backend }}
{% endif -%}

{%- if item.use_backend is defined -%}
    {% for backend in item.use_backend %}
        use_backend {{ backend.name }} {{ backend.condition }}
    {% endfor %}
{% endif -%}
